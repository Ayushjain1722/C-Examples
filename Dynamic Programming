#include <iostream>
using namespace std;

/Top Dowm approach = Recursion + memorization
int fibtd(int n, int *dp)
{ if(n==0 || n==1)
    { dp[n]=n;
      return n;
    }
    if(dp[n]==-1){
        dp[n]=fibtd(n-1,dp)+fibtd(n-2,dp);
    }
    else{
        return dp[n];
    }
}

//Bottom up approch  O(n)
int fibdp(int n)
{  int *dp = new int[n];
   dp[0]=0;
   dp[1]=1;
   for(int i=2;i<=n;i++)
   {
       dp[i]=dp[i-1]+dp[i-2];
   }
return dp[n];
}

int main() {
	int dp[100];
    for(int i=0;i<100;i++)
    {
        dp[i]=-1;
    }
    cout<<fibdp(8)<<endl;
    cout<<fibtd(8,dp)<<endl;
}
